// <auto-generated />
using System;
using FanSoft.CadTurmas.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FanSoft.CadTurmas.Data.EF.Migrations
{
    [DbContext(typeof(CadTurmasDataContext))]
    [Migration("20200106200947_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FanSoft.CadTurmas.Domain.Entities.Instrutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Instrutor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 953, DateTimeKind.Utc).AddTicks(302),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 953, DateTimeKind.Utc).AddTicks(273),
                            Nome = "Fabiano Nalin"
                        });
                });

            modelBuilder.Entity("FanSoft.CadTurmas.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(3351),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(3339),
                            Descricao = "Administrador de tudo",
                            Nome = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(5794),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(5782),
                            Descricao = "Perfil de Usuário c/ privilégios administrativos",
                            Nome = "PowerUser"
                        },
                        new
                        {
                            Id = 3,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(5936),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(5933),
                            Descricao = "Perfil de Usuário comum",
                            Nome = "User"
                        });
                });

            modelBuilder.Entity("FanSoft.CadTurmas.Domain.Entities.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("date");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("date");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(80)");

                    b.Property<int?>("InstrutorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("InstrutorId");

                    b.ToTable("Turma");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afb2b278-9fee-47c3-9fce-3bedc2c28b0b"),
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 955, DateTimeKind.Utc).AddTicks(5025),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 955, DateTimeKind.Utc).AddTicks(5013),
                            DataInicio = new DateTime(2020, 1, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            DataTermino = new DateTime(2020, 1, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Descricao = "Turma AZ 203",
                            InstrutorId = 1,
                            Nome = "AZ 203 Dez 2019"
                        });
                });

            modelBuilder.Entity("FanSoft.CadTurmas.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("char(32)");

                    b.Property<DateTime?>("RefreshTokenValidate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("char(88)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 965, DateTimeKind.Utc).AddTicks(7634),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 965, DateTimeKind.Utc).AddTicks(7602),
                            Email = "nalin@fansoft.com.br",
                            Nome = "Fabiano Nalin",
                            Senha = "a1n5uKDhhuf8oIt9RxEKX4dGV3ASZODELtipSBegRkM92SE+EaUhgxS0now1iRwko0nTDhfR3q7rV+Lz3btZMQ=="
                        },
                        new
                        {
                            Id = 2,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(1460),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(1448),
                            Email = "pmitui@gmail.com",
                            Nome = "Priscila Mitui",
                            Senha = "jVCZJAmUc24IvM/FtuyUf2gUm5/0m8fd4hEvrR0jq+ri86hUBVwi+8YefhqqWXbEXlJ94E62oUIdc50hBzCgTw=="
                        });
                });

            modelBuilder.Entity("FanSoft.CadTurmas.Domain.Entities.UsuarioRole", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AlteradoEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.HasKey("UsuarioId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsuarioRole");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            RoleId = 1,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(8162),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(8145)
                        },
                        new
                        {
                            UsuarioId = 1,
                            RoleId = 2,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(9931),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(9919)
                        },
                        new
                        {
                            UsuarioId = 2,
                            RoleId = 3,
                            AlteradoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(9983),
                            CriadoEm = new DateTime(2020, 1, 6, 20, 9, 46, 966, DateTimeKind.Utc).AddTicks(9981)
                        });
                });

            modelBuilder.Entity("FanSoft.CadTurmas.Domain.Entities.Turma", b =>
                {
                    b.HasOne("FanSoft.CadTurmas.Domain.Entities.Instrutor", "Instrutor")
                        .WithMany("Turmas")
                        .HasForeignKey("InstrutorId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("FanSoft.CadTurmas.Domain.Entities.UsuarioRole", b =>
                {
                    b.HasOne("FanSoft.CadTurmas.Domain.Entities.Role", "Role")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FanSoft.CadTurmas.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
